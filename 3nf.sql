-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.author
(
    author_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    author_name character varying(100) NOT NULL,
    PRIMARY KEY (author_id)
);

CREATE TABLE IF NOT EXISTS public.books
(
    book_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    book_name character varying(100) NOT NULL,
    PRIMARY KEY (book_id)
);

CREATE TABLE IF NOT EXISTS public.seller
(
    seller_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    seller_name character varying(100) NOT NULL,
    PRIMARY KEY (seller_id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    client_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    client_name character varying(100) NOT NULL,
    PRIMARY KEY (client_id)
);

CREATE TABLE IF NOT EXISTS public.deal
(
    deal_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    book_id integer NOT NULL,
    author_id integer NOT NULL,
    seller_id integer NOT NULL,
    client_id integer NOT NULL,
    PRIMARY KEY (deal_id)
);

CREATE TABLE IF NOT EXISTS public.author_books
(
    author_author_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    books_book_id integer NOT NULL GENERATED ALWAYS AS IDENTITY
);

CREATE TABLE IF NOT EXISTS public.seller_clients
(
    seller_seller_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    clients_client_id integer NOT NULL GENERATED ALWAYS AS IDENTITY
);

CREATE TABLE IF NOT EXISTS public.sat_author
(
    author_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    author_birth date NOT NULL,
    autor_country character varying(100) NOT NULL,
    PRIMARY KEY (author_id)
);

ALTER TABLE IF EXISTS public.deal
    ADD FOREIGN KEY (book_id)
    REFERENCES public.books (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.deal
    ADD FOREIGN KEY (author_id)
    REFERENCES public.author (author_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.deal
    ADD FOREIGN KEY (seller_id)
    REFERENCES public.seller (seller_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.deal
    ADD FOREIGN KEY (client_id)
    REFERENCES public.clients (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.author_books
    ADD FOREIGN KEY (author_author_id)
    REFERENCES public.author (author_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.author_books
    ADD FOREIGN KEY (books_book_id)
    REFERENCES public.books (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.seller_clients
    ADD FOREIGN KEY (seller_seller_id)
    REFERENCES public.seller (seller_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.seller_clients
    ADD FOREIGN KEY (clients_client_id)
    REFERENCES public.clients (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sat_author
    ADD FOREIGN KEY (author_id)
    REFERENCES public.author (author_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
